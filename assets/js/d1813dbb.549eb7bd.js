"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[9844],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>h});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(r),d=o,h=m["".concat(l,".").concat(d)]||m[d]||u[d]||a;return r?n.createElement(h,s(s({ref:t},c),{},{components:r})):n.createElement(h,s({ref:t},c))}));function h(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[m]="string"==typeof e?e:o,s[1]=i;for(var p=2;p<a;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},25601:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var n=r(87462),o=(r(67294),r(3905));const a={},s="OpenTelemetry Astronomy Shop Demo",i={unversionedId:"live-examples/opentelemetry-store/overview",id:"live-examples/opentelemetry-store/overview",title:"OpenTelemetry Astronomy Shop Demo",description:"This system implements an Astronomy shop in a set of microservices in different languages with OpenTelemetry enabled, intended to be used as an example of OpenTelemetry instrumentation and observability.",source:"@site/docs/live-examples/opentelemetry-store/overview.md",sourceDirName:"live-examples/opentelemetry-store",slug:"/live-examples/opentelemetry-store/overview",permalink:"/live-examples/opentelemetry-store/overview",draft:!1,editUrl:"https://github.com/kubeshop/tracetest/blob/main/docs/docs/live-examples/opentelemetry-store/overview.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Pokeshop API - Import Pokemon",permalink:"/live-examples/pokeshop/use-cases/import-pokemon"},next:{title:"OpenTelemetry Store - Add item into the shopping cart",permalink:"/live-examples/opentelemetry-store/use-cases/add-item-into-shopping-cart"}},l={},p=[{value:"Running with Tracetest",id:"running-with-tracetest",level:2},{value:"Use Cases",id:"use-cases",level:2},{value:"System Architecture",id:"system-architecture",level:2}],c={toc:p},m="wrapper";function u(e){let{components:t,...r}=e;return(0,o.kt)(m,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"opentelemetry-astronomy-shop-demo"},"OpenTelemetry Astronomy Shop Demo"),(0,o.kt)("p",null,"This system implements an Astronomy shop in a set of microservices in different languages with OpenTelemetry enabled, intended to be used as an example of OpenTelemetry instrumentation and observability."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Source Code"),": ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/open-telemetry/opentelemetry-demo"},"https://github.com/open-telemetry/opentelemetry-demo")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Running it Locally"),": ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/open-telemetry/opentelemetry-demo/blob/main/docs/docker_deployment.md#run-docker-compose"},"Instructions")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Running on Kubernetes"),": ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/open-telemetry/opentelemetry-demo/blob/main/docs/kubernetes_deployment.md"},"Instructions"))),(0,o.kt)("h2",{id:"running-with-tracetest"},"Running with Tracetest"),(0,o.kt)("p",null,"To run the this demo locally with Tracetest, first clone OpenTelemetry demo repo in your machine in any folder:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"git clone https://github.com/open-telemetry/opentelemetry-demo.git\n")),(0,o.kt)("p",null,"And then, run in that folder:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"docker compose up --no-build\n")),(0,o.kt)("p",null,"After a few minutes, the store should be running normally in your machine, to test it go to a browser and access: ",(0,o.kt)("a",{parentName:"p",href:"http://localhost:8080"},"http://localhost:8080")),(0,o.kt)("p",null,"Now, to start Tracetest connected with this demo, download the contents of the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/kubeshop/tracetest/tree/main/examples/tracetest-open-telemetry-store-demo"},"Running Tracetest with OpenTelemetry store demo")," in any folder, and then run ",(0,o.kt)("inlineCode",{parentName:"p"},"docker compose up"),"."),(0,o.kt)("p",null,"After that, Tracetest will start on ",(0,o.kt)("a",{parentName:"p",href:"http://localhost:11633"},"http://localhost:11633")," and you can start creating tests."),(0,o.kt)("h2",{id:"use-cases"},"Use Cases"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/live-examples/opentelemetry-store/use-cases/add-item-into-shopping-cart"},"Add item into shopping cart"),": Simulate a user choosing an item and adding it to the shopping cart."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/live-examples/opentelemetry-store/use-cases/check-shopping-cart-contents"},"Check shopping cart content"),": Simulate a user choosing different products and checking the shopping cart later. "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/live-examples/opentelemetry-store/use-cases/checkout"},"Checkout"),": Simulates a user choosing a product and later doing a checkout of that product, with billing and shipping info."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/live-examples/opentelemetry-store/use-cases/get-recommended-products"},"Get recommended products"),": Simulates a user querying for recommended products.")),(0,o.kt)("h2",{id:"system-architecture"},"System Architecture"),(0,o.kt)("p",null,"This demonstration environment consists of a series of microservices, handling each aspect of the store, such as Product Catalog, Payment, Currency, etc."),(0,o.kt)("p",null,"A detailed description of these services can be seen ",(0,o.kt)("a",{parentName:"p",href:"https://opentelemetry.io/docs/demo/services/"},"here"),"\nand the architecture diagrams can be seen ",(0,o.kt)("a",{parentName:"p",href:"https://opentelemetry.io/docs/demo/architecture/"},"here"),"."))}u.isMDXComponent=!0}}]);