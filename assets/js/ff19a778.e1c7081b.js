"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[3272],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>v});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),d=i,v=u["".concat(l,".").concat(d)]||u[d]||f[d]||o;return n?r.createElement(v,a(a({ref:t},c),{},{components:n})):r.createElement(v,a({ref:t},c))}));function v(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:i,a[1]=s;for(var p=2;p<o;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2538:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>f,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=n(87462),i=(n(67294),n(3905));const o={},a="Provisioning server",s={unversionedId:"configuration/provisioning",id:"configuration/provisioning",title:"Provisioning server",description:"Tracetest allows a server to be provisioned the first time a new Tracetest server is installed and launched. Provisioning sets certain resources in the server to the specified values, allowing you to configure the server. It is convenient in a CI/CD flow where you want to launch a server with a specified configuration.",source:"@site/docs/configuration/provisioning.md",sourceDirName:"configuration",slug:"/configuration/provisioning",permalink:"/configuration/provisioning",draft:!1,editUrl:"https://github.com/kubeshop/tracetest/blob/main/docs/docs/configuration/provisioning.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Configuring the Tracetest Server",permalink:"/configuration/server"},next:{title:"Trace Polling Settings",permalink:"/configuration/trace-polling"}},l={},p=[],c={toc:p},u="wrapper";function f(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"provisioning-server"},"Provisioning server"),(0,i.kt)("p",null,"Tracetest allows a server to be provisioned the first time a new Tracetest server is installed and launched. Provisioning sets certain resources in the server to the specified values, allowing you to configure the server. It is convenient in a CI/CD flow where you want to launch a server with a specified configuration."),(0,i.kt)("p",null,"The server is provisioned by specifying a series of YAML snippets which will configure various resources. Each snippet is separated with the YAML separator, ",(0,i.kt)("inlineCode",{parentName:"p"},"---"),"."),(0,i.kt)("p",null,"Currently, the following resources can be provisioned:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"DataStore"),(0,i.kt)("li",{parentName:"ul"},"PollingProfile"),(0,i.kt)("li",{parentName:"ul"},"Config"),(0,i.kt)("li",{parentName:"ul"},"Demo")),(0,i.kt)("p",null,"For Docker-based installs, the provisioning file is placed in the ",(0,i.kt)("inlineCode",{parentName:"p"},"./tracetest/tracetest-provisioning.yaml")," file by default when you run the ",(0,i.kt)("inlineCode",{parentName:"p"},"tracetest server install")," command and select the ",(0,i.kt)("inlineCode",{parentName:"p"},"Using Docker Compose")," option. The first time you start Tracetest with a ",(0,i.kt)("inlineCode",{parentName:"p"},"docker compose -f tracetest/docker-compose.yaml  up -d")," command, the server will use the contents of this file to provision the server. To provision differently, you would alter the contents of the ",(0,i.kt)("inlineCode",{parentName:"p"},"tracetest-provisioning.yaml")," file before launching Tracetest in Docker."),(0,i.kt)("p",null,"This is an example of a ",(0,i.kt)("inlineCode",{parentName:"p"},"tracetest-provisioning.yaml")," file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"---\ntype: DataStore\nspec:\n  name: otlp\n  type: otlp\n  default: true\n---\ntype: Config\nspec:\n  analyticsEnabled: true\n---\ntype: PollingProfile\nspec:\n  name: Custom Profile\n  strategy: periodic\n  default: true\n  periodic:\n    timeout: 2m\n    retryDelay: 3s\n---\ntype: Demo\nspec:\n  name: pokeshop\n  type: pokeshop\n  enabled: true\n  pokeshop:\n    httpEndpoint: http://demo-api:8081\n    grpcEndpoint: demo-api:8082\n")),(0,i.kt)("p",null,"Alternatively, we support setting an environment variable called ",(0,i.kt)("inlineCode",{parentName:"p"},"TRACETEST_PROVISIONING")," to provision the server when it is first started. Base64 encode the provisioning YAML you want to utilize and set the ",(0,i.kt)("inlineCode",{parentName:"p"},"TRACETEST_PROVISIONING")," environment variable with the result. The Tracetest server will then provision based on the Base64 encoded provisioning data in this environment variable the first time it is launched."))}f.isMDXComponent=!0}}]);