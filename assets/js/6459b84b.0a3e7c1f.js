"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[7868],{2604:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>S,contentTitle:()=>D,default:()=>_,frontMatter:()=>x,metadata:()=>L,toc:()=>V});var n=a(87462),r=a(67294),o=a(3905),l=a(86010),s=a(12466),i=a(16550),c=a(91980),u=a(67392),d=a(50012);function p(e){return function(e){return r.Children.map(e,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function m(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??p(a);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function h(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function k(e){let{queryString:t=!1,groupId:a}=e;const n=(0,i.k6)(),o=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,c._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(n.location.search);t.set(o,e),n.replace({...n.location,search:t.toString()})}),[o,n])]}function b(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,o=m(e),[l,s]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!h({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:o}))),[i,c]=k({queryString:a,groupId:n}),[u,p]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,o]=(0,d.Nk)(a);return[n,(0,r.useCallback)((e=>{a&&o.set(e)}),[a,o])]}({groupId:n}),b=(()=>{const e=i??u;return h({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{b&&s(b)}),[b]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!h({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);s(e),c(e),p(e)}),[c,p,o]),tabValues:o}}var g=a(72389);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function y(e){let{className:t,block:a,selectedValue:o,selectValue:i,tabValues:c}=e;const u=[],{blockElementScrollPositionUntilNextRender:d}=(0,s.o5)(),p=e=>{const t=e.currentTarget,a=u.indexOf(t),n=c[a].value;n!==o&&(d(t),i(n))},m=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const a=u.indexOf(e.currentTarget)+1;t=u[a]??u[0];break}case"ArrowLeft":{const a=u.indexOf(e.currentTarget)-1;t=u[a]??u[u.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":a},t)},c.map((e=>{let{value:t,label:a,attributes:s}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>u.push(e),onKeyDown:m,onClick:p},s,{className:(0,l.Z)("tabs__item",f.tabItem,s?.className,{"tabs__item--active":o===t})}),a??t)})))}function v(e){let{lazy:t,children:a,selectedValue:n}=e;if(a=Array.isArray(a)?a:[a],t){const e=a.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},a.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function T(e){const t=b(e);return r.createElement("div",{className:(0,l.Z)("tabs-container",f.tabList)},r.createElement(y,(0,n.Z)({},e,t)),r.createElement(v,(0,n.Z)({},e,t)))}function w(e){const t=(0,g.Z)();return r.createElement(T,(0,n.Z)({key:String(t)},e))}const N={tabItem:"tabItem_Ymn6"};function C(e){let{children:t,hidden:a,className:n}=e;return r.createElement("div",{role:"tabpanel",className:(0,l.Z)(N.tabItem,n),hidden:a},t)}var I=a(90814);function E(){function e(e){let{event:t,installationPlatform:a}=e;window.dataLayer=window.dataLayer||[],window.dataLayer.push({installationPlatform:a,event:"installationPlatform"})}return r.createElement(w,{groupId:"operating-systems"},r.createElement(C,{value:"mac",label:"MAC",default:!0},r.createElement("div",{onClick:()=>e({installationPlatform:"MacOS"})},r.createElement(I.Z,{language:"bash",title:"Terminal"},"brew install kubeshop/tracetest/tracetest"))),r.createElement(C,{value:"linux",label:"LINUX"},r.createElement("div",{onClick:()=>e({installationPlatform:"Linux"})},r.createElement(I.Z,{language:"bash",title:"Terminal"},"curl -L https://raw.githubusercontent.com/kubeshop/tracetest/main/install-cli.sh | bash"))),r.createElement(C,{value:"win",label:"WINDOWS"},r.createElement("div",{onClick:()=>e({installationPlatform:"Windows"})},r.createElement(I.Z,{language:"bash",title:"Terminal"},"choco source add --name=kubeshop_repo --source=https://chocolatey.kubeshop.io/chocolatey ; choco install tracetest"))))}const x={},D="Getting Started",L={unversionedId:"getting-started/installation",id:"getting-started/installation",title:"Getting Started",description:"This page showcases getting started with Tracetest by using the Tracetest CLI, Docker, or Kubernetes.",source:"@site/docs/getting-started/installation.mdx",sourceDirName:"getting-started",slug:"/getting-started/installation",permalink:"/getting-started/installation",draft:!1,editUrl:"https://github.com/kubeshop/tracetest/blob/main/docs/docs/getting-started/installation.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Tracetest Documentation",permalink:"/"},next:{title:"Detailed Instructions on Installing Tracetest Using the CLI",permalink:"/getting-started/detailed-installation"}},S={},V=[{value:"Install the Tracetest CLI",id:"install-the-tracetest-cli",level:2},{value:"Install the Tracetest server",id:"install-the-tracetest-server",level:2}],Z={toc:V},O="wrapper";function _(e){let{components:t,...a}=e;return(0,o.kt)(O,(0,n.Z)({},Z,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"getting-started"},"Getting Started"),(0,o.kt)("p",null,"This page showcases getting started with Tracetest by using the Tracetest CLI, Docker, or Kubernetes."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"You need to add ",(0,o.kt)("a",{parentName:"p",href:"https://opentelemetry.io/docs/instrumentation/"},"OpenTelemetry instrumentation")," to your code and configure sending traces to a trace data store, or Tracetest directly, to benefit from Tracetest's trace-based testing.")),(0,o.kt)("h2",{id:"install-the-tracetest-cli"},"Install the Tracetest CLI"),(0,o.kt)(E,{mdxType:"GtagInstallCliTabs"}),(0,o.kt)("h2",{id:"install-the-tracetest-server"},"Install the Tracetest server"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Terminal"',title:'"Terminal"'},"tracetest server install\n")),(0,o.kt)(w,{groupId:"container-orchestrators",mdxType:"Tabs"},(0,o.kt)(C,{value:"docker-compose",label:"Docker Compose",default:!0,mdxType:"TabItem"},(0,o.kt)(I.Z,{language:"text",title:"Terminal",mdxType:"CodeBlock"},"How do you want to run TraceTest? [type to search]:\n> Using Docker Compose\n  Using Kubernetes"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Follow the prompts and continue with all the default settings.\nThis will generate a ",(0,o.kt)("inlineCode",{parentName:"p"},"./tracetest/")," directory that contains a ",(0,o.kt)("inlineCode",{parentName:"p"},"docker-compose.yaml")," and two more config files. One for Tracetest and one for OpenTelemetry collector."),(0,o.kt)("p",{parentName:"admonition"},"To see the output of this command, view ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/kubeshop/tracetest/tree/main/examples/tracetest-jaeger"},"this sample setup")," from our GitHub examples.")),(0,o.kt)("p",null,"Start Docker Compose from the directory where you ran ",(0,o.kt)("inlineCode",{parentName:"p"},"tracetest server install"),"."),(0,o.kt)(I.Z,{language:"bash",title:"Terminal",mdxType:"CodeBlock"},"docker compose -f tracetest/docker-compose.yaml up -d"),(0,o.kt)(I.Z,{language:"bash",title:"Condensed expected output from the Tracetest container:",mdxType:"CodeBlock"},"Starting tracetest ...\n...\n2022/11/28 18:24:09 HTTP Server started\n...")),(0,o.kt)(C,{value:"kubernetes",label:"Kubernetes",mdxType:"TabItem"},(0,o.kt)(I.Z,{language:"text",title:"Terminal",mdxType:"CodeBlock"},"How do you want to run TraceTest? [type to search]:\n  Using Docker Compose\n> Using Kubernetes"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Follow the prompts and continue with all the default settings.\nThis will deploy all resources to Kubernetes.\nTo see exactly what is deployed, view ",(0,o.kt)("a",{parentName:"p",href:"../deployment/kubernetes"},"the deployment instructions")," in the Deployment section of the docs.")),(0,o.kt)(I.Z,{language:"bash",title:"Condensed expected output from the Tracetest CLI:",mdxType:"CodeBlock"},'export POD_NAME=$(kubectl get pods --namespace demo -l "app.kubernetes.io/name=pokemon-api,app.kubernetes.io/instance=demo" -o jsonpath="{.items[0].metadata.name}")\nexport CONTAINER_PORT=$(kubectl get pod --namespace demo $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")\necho "Visit http://127.0.0.1:8080 to use your application"\nkubectl --namespace demo port-forward $POD_NAME 8080:$CONTAINER_PORT\nkubectl --kubeconfig <path-to-your-home>/.kube/config --context <your-cluster-context> --namespace tracetest port-forward svc/tracetest 11633'))),(0,o.kt)("p",null,"Open your browser on ",(0,o.kt)("a",{parentName:"p",href:"http://localhost:11633"},(0,o.kt)("inlineCode",{parentName:"a"},"http://localhost:11633")),"."),(0,o.kt)("p",null,"Create a ",(0,o.kt)("a",{parentName:"p",href:"/web-ui/creating-tests"},"test"),"."),(0,o.kt)("p",null,"Need more detailed information about how to install Tracetest? Read the detailed setup on the ",(0,o.kt)("a",{parentName:"p",href:"./detailed-installation"},"CLI installation page"),"."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"View deployment instructions for Docker and Kubernetes in the ",(0,o.kt)("a",{parentName:"p",href:"../deployment/overview"},"Deployment section"),".")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Running a test against ",(0,o.kt)("inlineCode",{parentName:"p"},"localhost")," will resolve as ",(0,o.kt)("inlineCode",{parentName:"p"},"127.0.0.1")," inside the Tracetest container. To run tests against apps running on your local machine, add them to the same network and use service name mapping instead. Example: Instead of running an app on ",(0,o.kt)("inlineCode",{parentName:"p"},"localhost:8080"),", add it to your Docker Compose file, connect it to the same network as your Tracetest service, and use ",(0,o.kt)("inlineCode",{parentName:"p"},"service-name:8080")," in the URL field when creating an app."),(0,o.kt)("p",{parentName:"admonition"},"You can reach services running on your local machine using:"),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},"Linux (docker version < 20.10.0): ",(0,o.kt)("inlineCode",{parentName:"li"},"172.17.0.1:8080")),(0,o.kt)("li",{parentName:"ul"},"MacOS (docker version >= 18.03) and Linux (docker version >= 20.10.0): ",(0,o.kt)("inlineCode",{parentName:"li"},"host.docker.internal:8080")))))}_.isMDXComponent=!0}}]);