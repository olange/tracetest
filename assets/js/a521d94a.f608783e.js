"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[4677],{41837:e=>{e.exports=JSON.parse('{"url":"https://raw.githubusercontent.com/kubeshop/tracetest/main/api/openapi.yaml","themeId":"theme-redoc","isSpecFile":false,"spec":{"openapi":"3.0.0","info":{"version":"0.2.1","title":"TraceTest","description":"OpenAPI definition for TraceTest endpoint and resources"},"servers":[{"url":"/api"}],"paths":{"/definition.yaml":{"post":{"tags":["api"],"summary":"Execute a definition","description":"Execute a definition","operationId":"executeDefinition","requestBody":{"content":{"text/json":{"schema":{"$ref":"#/components/schemas/TextDefinition"}}}},"responses":{"200":{"description":"Definition updated","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExecuteDefinitionResponse"}}}},"201":{"description":"Definition created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExecuteDefinitionResponse"}}}}}},"put":{"tags":["api"],"summary":"Upsert a definition","description":"Upsert a definition","operationId":"upsertDefinition","requestBody":{"content":{"text/json":{"schema":{"$ref":"#/components/schemas/TextDefinition"}}}},"responses":{"200":{"description":"Definition updated","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpsertDefinitionResponse"}}}},"201":{"description":"Definition created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpsertDefinitionResponse"}}}}}}},"/transactions":{"get":{"tags":["api"],"summary":"Get transactions","description":"get transactions","operationId":"getTransactions","parameters":[{"$ref":"#/components/parameters/take"},{"$ref":"#/components/parameters/skip"},{"$ref":"#/components/parameters/query"},{"$ref":"#/components/parameters/runnableResourceSortBy"},{"$ref":"#/components/parameters/sortDirection"}],"responses":{"200":{"description":"successful operation","headers":{"X-Total-Count":{"schema":{"type":"integer"},"description":"Total records count"}},"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Transaction"}}}}},"500":{"description":"problem with getting transactions"}}},"post":{"tags":["api"],"summary":"Create new transaction","description":"Create new transaction","operationId":"createTransaction","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Transaction"}}}},"responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Transaction"}}}},"400":{"description":"trying to create a transaction with an already existing ID"}}}},"/transactions/{transactionId}":{"get":{"tags":["api"],"parameters":[{"$ref":"#/components/parameters/transactionId"}],"summary":"get transaction","description":"get transaction","operationId":"getTransaction","responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Transaction"}}}},"500":{"description":"problem with getting a transaction"}}},"put":{"tags":["api"],"parameters":[{"$ref":"#/components/parameters/transactionId"}],"summary":"update transaction","description":"update transaction action","operationId":"updateTransaction","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Transaction"}}}},"responses":{"204":{"description":"successful operation"},"500":{"description":"problem with updating transaction"}}},"delete":{"tags":["api"],"parameters":[{"$ref":"#/components/parameters/transactionId"}],"summary":"delete a transaction","description":"delete a transaction","operationId":"deleteTransaction","responses":{"204":{"description":"OK"}}}},"/transactions/{transactionId}/version/{version}":{"get":{"tags":["api"],"parameters":[{"$ref":"#/components/parameters/transactionId"},{"$ref":"#/components/parameters/version"}],"summary":"get a transaction specific version","description":"get a transaction specific version","operationId":"getTransactionVersion","responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Transaction"}}}},"500":{"description":"problem with getting a test"}}}},"/transactions/{transactionId}/version/{version}/definition.yaml":{"get":{"tags":["api"],"parameters":[{"$ref":"#/components/parameters/transactionId"},{"$ref":"#/components/parameters/version"}],"summary":"Get the transaction definition as an YAML file","description":"Get the transaction as an YAML file","operationId":"getTransactionVersionDefinitionFile","responses":{"200":{"description":"OK","content":{"application/yaml":{"schema":{"type":"string"}}}}}}},"/transactions/{transactionId}/run":{"post":{"tags":["api"],"parameters":[{"$ref":"#/components/parameters/transactionId"}],"summary":"run transaction","description":"run a particular transaction","operationId":"runTransaction","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RunInformation"}}}},"responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionRun"}}}}}},"get":{"tags":["api"],"parameters":[{"$ref":"#/components/parameters/transactionId"},{"$ref":"#/components/parameters/take"},{"$ref":"#/components/parameters/skip"}],"summary":"Get all runs from a particular transaction","description":"Get all runs from a particular transaction","operationId":"getTransactionRuns","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TransactionRun"}}}}}}}},"/transactions/{transactionId}/run/{runId}":{"get":{"tags":["api"],"parameters":[{"$ref":"#/components/parameters/transactionId"},{"$ref":"#/components/parameters/runId"}],"summary":"Get a specific run from a particular transaction","description":"Get a specific run from a particular transaction","operationId":"getTransactionRun","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionRun"}}}},"404":{"description":"transaction run not found"}}},"delete":{"tags":["api"],"parameters":[{"$ref":"#/components/parameters/transactionId"},{"$ref":"#/components/parameters/runId"}],"summary":"Delete a specific run from a particular transaction","description":"Delete a specific run from a particular transaction","operationId":"deleteTransactionRun","responses":{"204":{"description":"OK"},"404":{"description":"transaction run not found"}}}},"/tests":{"get":{"tags":["api"],"summary":"Get tests","description":"get tests","operationId":"getTests","parameters":[{"$ref":"#/components/parameters/take"},{"$ref":"#/components/parameters/skip"},{"$ref":"#/components/parameters/query"},{"$ref":"#/components/parameters/runnableResourceSortBy"},{"$ref":"#/components/parameters/sortDirection"}],"responses":{"200":{"description":"successful operation","headers":{"X-Total-Count":{"schema":{"type":"integer"},"description":"Total records count"}},"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Test"}}}}},"500":{"description":"problem with getting tests"}}},"post":{"tags":["api"],"summary":"Create new test","description":"Create new test action","operationId":"createTest","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Test"}}}},"responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Test"}}}},"400":{"description":"trying to create a test with an already existing ID"}}}},"/tests/{testId}":{"get":{"tags":["api"],"parameters":[{"$ref":"#/components/parameters/testId"}],"summary":"get test","description":"get test","operationId":"getTest","responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Test"}}}},"500":{"description":"problem with getting a test"}}},"put":{"tags":["api"],"parameters":[{"$ref":"#/components/parameters/testId"}],"summary":"update test","description":"update test action","operationId":"updateTest","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Test"}}}},"responses":{"204":{"description":"successful operation"},"500":{"description":"problem with updating test"}}},"delete":{"tags":["api"],"parameters":[{"$ref":"#/components/parameters/testId"}],"summary":"delete a test","description":"delete a test","operationId":"deleteTest","responses":{"204":{"description":"OK"}}}},"/tests/{testId}/run":{"post":{"tags":["api"],"parameters":[{"$ref":"#/components/parameters/testId"}],"summary":"run test","description":"run a particular test","operationId":"runTest","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RunInformation"}}}},"responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TestRun"}}}},"422":{"description":"some variables are missing","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MissingVariablesError"}}}}}},"get":{"tags":["api"],"parameters":[{"$ref":"#/components/parameters/testId"},{"$ref":"#/components/parameters/take"},{"$ref":"#/components/parameters/skip"}],"summary":"get the runs for a test","description":"get the runs from a particular test","operationId":"getTestRuns","responses":{"200":{"description":"successful operation","headers":{"X-Total-Count":{"schema":{"type":"integer"},"description":"Total records count"}},"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TestRun"}}}}}}}},"/tests/{testId}/run/{runId}/select":{"get":{"tags":["api"],"parameters":[{"$ref":"#/components/parameters/testId"},{"$ref":"#/components/parameters/runId"},{"$ref":"#/components/parameters/query"}],"summary":"retrieve spans that will be selected by selector","description":"get the spans ids that would be selected by a specific selector query","operationId":"getTestResultSelectedSpans","responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SelectedSpansResult"}}}}}}},"/tests/{testId}/run/{runId}/dry-run":{"put":{"tags":["api"],"parameters":[{"$ref":"#/components/parameters/testId"},{"$ref":"#/components/parameters/runId"}],"summary":"run given assertions against the traces from the given run without persisting anything","description":"use this method to test a definition against an actual trace without creating a new version or persisting anything","operationId":"dryRunAssertion","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TestSpecs"}}}},"responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AssertionResults"}}}}}}},"/tests/{testId}/run/{runId}/rerun":{"post":{"tags":["api"],"parameters":[{"$ref":"#/components/parameters/testId"},{"$ref":"#/components/parameters/runId"}],"summary":"rerun a test run","description":"rerun a test run","operationId":"rerunTestRun","responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TestRun"}}}}}}},"/tests/{testId}/run/{runId}/junit.xml":{"get":{"tags":["api"],"parameters":[{"$ref":"#/components/parameters/testId"},{"$ref":"#/components/parameters/runId"}],"summary":"get test run results in JUnit xml format","description":"get test run results in JUnit xml format","operationId":"getRunResultJUnit","responses":{"200":{"description":"JUnit formatted file","content":{"application/xml":{"schema":{"type":"string"}}}}}}},"/tests/{testId}/run/{runId}/export":{"get":{"tags":["api"],"parameters":[{"$ref":"#/components/parameters/testId"},{"$ref":"#/components/parameters/runId"}],"summary":"export test and test run information","description":"export test and test run information for debugging","operationId":"exportTestRun","responses":{"200":{"description":"successfuly exported test and test run information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExportedTestInformation"}}}}}}},"/tests/import":{"post":{"tags":["api"],"summary":"import test and test run information","description":"import test and test run information for debugging","operationId":"importTestRun","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExportedTestInformation"}}}},"responses":{"200":{"description":"successfuly imported test and test run information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExportedTestInformation"}}}}}}},"/tests/{testId}/run/{runId}":{"get":{"tags":["api"],"parameters":[{"$ref":"#/components/parameters/testId"},{"$ref":"#/components/parameters/runId"}],"summary":"get test Run","description":"get a particular test Run","operationId":"getTestRun","responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TestRun"}}}}}},"delete":{"tags":["api"],"parameters":[{"$ref":"#/components/parameters/testId"},{"$ref":"#/components/parameters/runId"}],"summary":"delete a test run","description":"delete a test run","operationId":"deleteTestRun","responses":{"204":{"description":"OK"}}}},"/tests/{testId}/definition":{"get":{"tags":["api"],"parameters":[{"$ref":"#/components/parameters/testId"}],"operationId":"getTestSpecs","summary":"Get definition for a test","description":"Gets definition for a test","responses":{"201":{"description":"successful operation","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TestSpecs"}}}}}}}},"/tests/{testId}/version/{version}":{"get":{"tags":["api"],"parameters":[{"$ref":"#/components/parameters/testId"},{"$ref":"#/components/parameters/version"}],"summary":"get a test specific version","description":"get a test specific version","operationId":"getTestVersion","responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Test"}}}},"500":{"description":"problem with getting a test"}}}},"/tests/{testId}/version/{version}/definition.yaml":{"get":{"tags":["api"],"parameters":[{"$ref":"#/components/parameters/testId"},{"$ref":"#/components/parameters/version"}],"summary":"Get the test definition as an YAML file","description":"Get the test definition as an YAML file","operationId":"getTestVersionDefinitionFile","responses":{"200":{"description":"OK","content":{"application/yaml":{"schema":{"type":"string"}}}}}}},"/tests/{testId}/run/{runId}/stop":{"post":{"tags":["api"],"parameters":[{"$ref":"#/components/parameters/testId"},{"$ref":"#/components/parameters/runId"}],"summary":"stops the execution of a test run","description":"stops the execution of a test run","operationId":"stopTestRun","responses":{"200":{"description":"successful operation"},"422":{"description":"could not stop execution, probably it\'s not running anymore"}}}},"/tests/{testId}/run/{runId}/events":{"get":{"tags":["api"],"parameters":[{"$ref":"#/components/parameters/testId"},{"$ref":"#/components/parameters/runId"}],"summary":"get events from a test run","description":"get events from a test run","operationId":"getTestRunEvents","responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TestRunEvent"}}}}}}}},"/expressions/resolve":{"post":{"tags":["api"],"summary":"resolves an expression and returns the result string","description":"resolves an expression and returns the result string","operationId":"ExpressionResolve","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResolveRequestInfo"}}}},"responses":{"200":{"description":"successfully resolved the expression","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResolveResponseInfo"}}}}}}},"/resources":{"get":{"tags":["api"],"summary":"Get resources","description":"get resources","operationId":"getResources","parameters":[{"$ref":"#/components/parameters/take"},{"$ref":"#/components/parameters/skip"},{"$ref":"#/components/parameters/query"},{"$ref":"#/components/parameters/runnableResourceSortBy"},{"$ref":"#/components/parameters/sortDirection"}],"responses":{"200":{"description":"successful operation","headers":{"X-Total-Count":{"schema":{"type":"integer"},"description":"Total records count"}},"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Resource"}}}}}}}},"/config/connection":{"post":{"tags":["api"],"summary":"Tests the config data store/exporter connection","description":"Tests the config data store/exporter connection","operationId":"testConnection","requestBody":{"content":{"text/json":{"schema":{"$ref":"#/components/schemas/DataStore"}}}},"responses":{"201":{"description":"Test connection Result","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TestConnectionResponse"}}}}}}},"/configs":{"get":{"tags":["resource-api"],"parameters":[{"$ref":"#/components/parameters/take"},{"$ref":"#/components/parameters/skip"},{"$ref":"#/components/parameters/switchableResourceSortBy"},{"$ref":"#/components/parameters/sortDirection"}],"summary":"List Tracetest configuration","description":"List Tracetest configuration","operationId":"listConfiguration","responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConfigurationResourceList"}},"text/yaml":{"schema":{"$ref":"#/components/schemas/ConfigurationResourceList"}}}},"500":{"description":"problem getting the configuration list"}}}},"/configs/{configId}":{"get":{"tags":["resource-api"],"parameters":[{"$ref":"#/components/parameters/configId"}],"summary":"Get Tracetest configuration","description":"Get Tracetest configuration","operationId":"getConfiguration","responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConfigurationResource"}},"text/yaml":{"schema":{"$ref":"#/components/schemas/ConfigurationResource"}}}},"500":{"description":"problem getting a configuration"}}},"put":{"tags":["resource-api"],"parameters":[{"$ref":"#/components/parameters/configId"}],"summary":"Update Tracetest configuration","description":"Update Tracetest configuration","operationId":"updateConfiguration","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConfigurationResource"}},"text/yaml":{"schema":{"$ref":"#/components/schemas/ConfigurationResource"}}}},"responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConfigurationResource"}},"text/yaml":{"schema":{"$ref":"#/components/schemas/ConfigurationResource"}}}},"500":{"description":"problem updating configuration"}}}},"/pollingprofiles":{"get":{"tags":["resource-api"],"parameters":[{"$ref":"#/components/parameters/take"},{"$ref":"#/components/parameters/skip"},{"$ref":"#/components/parameters/switchableResourceSortBy"},{"$ref":"#/components/parameters/sortDirection"}],"summary":"List Polling Profile Configuration","description":"List Polling Profile configuration","operationId":"listPollingProfile","responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PollingProfileList"}},"text/yaml":{"schema":{"$ref":"#/components/schemas/PollingProfileList"}}}},"500":{"description":"problem getting the polling profile list"}}}},"/pollingprofiles/{pollingProfileId}":{"get":{"tags":["resource-api"],"parameters":[{"$ref":"#/components/parameters/pollingProfileId"}],"summary":"Get Polling Profile","description":"Get a polling profile used on Tracetest to configure how to fetch traces in a test.","operationId":"getPollingProfile","responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PollingProfile"}},"text/yaml":{"schema":{"$ref":"#/components/schemas/PollingProfile"}}}},"404":{"description":"polling profile not found"},"500":{"description":"problem getting a polling profile"}}},"put":{"tags":["resource-api"],"parameters":[{"$ref":"#/components/parameters/pollingProfileId"}],"summary":"Update a Polling Profile","description":"Update a polling profile used on Tracetest to configure how to fetch traces in a test.","operationId":"updatePollingProfile","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PollingProfile"}},"text/yaml":{"schema":{"$ref":"#/components/schemas/PollingProfile"}}}},"responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PollingProfile"}},"text/yaml":{"schema":{"$ref":"#/components/schemas/PollingProfile"}}}},"400":{"description":"invalid polling profile, some data was sent in incorrect format."},"404":{"description":"polling profile not found"},"500":{"description":"problem updating a polling profile"}}}},"/demos":{"get":{"tags":["resource-api"],"summary":"List Demonstrations","description":"List demonstrations used on Tracetest as quick start examples.","operationId":"listDemos","parameters":[{"$ref":"#/components/parameters/take"},{"$ref":"#/components/parameters/skip"},{"$ref":"#/components/parameters/switchableResourceSortBy"},{"$ref":"#/components/parameters/sortDirection"}],"responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DemoList"}},"text/yaml":{"schema":{"type":"object","properties":{"count":{"type":"integer"},"items":{"type":"array","items":{"$ref":"#/components/schemas/Demo"}}}}}}},"400":{"description":"invalid query for demos, some data was sent in incorrect format."},"500":{"description":"problem listing demos"}}},"post":{"tags":["resource-api"],"summary":"Create a Demonstration setting","description":"Create a demonstration used on Tracetest as quick start examples.","operationId":"createDemo","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Demo"}},"text/yaml":{"schema":{"$ref":"#/components/schemas/Demo"}}}},"responses":{"201":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Demo"}},"text/yaml":{"schema":{"$ref":"#/components/schemas/Demo"}}}},"500":{"description":"problem creating a demo"}}}},"/demos/{demoId}":{"get":{"tags":["resource-api"],"parameters":[{"$ref":"#/components/parameters/demoId"}],"summary":"Get Demonstration setting","description":"Get a demonstration used on Tracetest as quick start examples.","operationId":"getDemo","responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Demo"}},"text/yaml":{"schema":{"$ref":"#/components/schemas/Demo"}}}},"404":{"description":"demo not found"},"500":{"description":"problem getting a demo"}}},"put":{"tags":["resource-api"],"parameters":[{"$ref":"#/components/parameters/demoId"}],"summary":"Update a Demonstration setting","description":"Update a demonstration used on Tracetest as quick start examples.","operationId":"updateDemo","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Demo"}},"text/yaml":{"schema":{"$ref":"#/components/schemas/Demo"}}}},"responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Demo"}},"text/yaml":{"schema":{"$ref":"#/components/schemas/Demo"}}}},"400":{"description":"invalid demo, some data was sent in incorrect format."},"404":{"description":"demo not found"},"500":{"description":"problem updating a demo"}}},"delete":{"tags":["resource-api"],"parameters":[{"$ref":"#/components/parameters/demoId"}],"summary":"Delete a Demonstration setting","description":"Delete a demonstration used on Tracetest as quick start examples.","operationId":"deleteDemo","responses":{"204":{"description":"successful operation"},"400":{"description":"invalid demo, some data was sent in incorrect format."},"404":{"description":"demo not found"},"500":{"description":"problem deleting a demo"}}}},"/datastores":{"get":{"tags":["resource-api"],"parameters":[{"$ref":"#/components/parameters/take"},{"$ref":"#/components/parameters/skip"},{"$ref":"#/components/parameters/switchableResourceSortBy"},{"$ref":"#/components/parameters/sortDirection"}],"summary":"List Data Store","description":"List Data Store","operationId":"listDataStore","responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DataStoreList"}},"text/yaml":{"schema":{"$ref":"#/components/schemas/DataStoreList"}}}},"500":{"description":"problem getting the data store list"}}}},"/datastores/{dataStoreId}":{"get":{"tags":["resource-api"],"parameters":[{"$ref":"#/components/parameters/dataStoreId"}],"summary":"Get a Data Store","description":"Get a Data Store","operationId":"getDataStore","responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DataStoreResource"}}}},"404":{"description":"data store not found"},"500":{"description":"problem with getting a data store"}}},"put":{"tags":["resource-api"],"parameters":[{"$ref":"#/components/parameters/dataStoreId"}],"summary":"Update a Data Store","description":"Update a Data Store","operationId":"updateDataStore","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DataStore"}}}},"responses":{"204":{"description":"successful operation"},"400":{"description":"invalid data store, some data was sent in incorrect format."},"500":{"description":"problem with updating data store"}}},"delete":{"tags":["resource-api"],"parameters":[{"$ref":"#/components/parameters/dataStoreId"}],"summary":"Delete a Data Store","description":"Delete a Data Store","operationId":"deleteDataStore","responses":{"204":{"description":"OK"}}}},"/environments":{"get":{"tags":["resource-api"],"summary":"List environments","description":"List environments available in Tracetest.","operationId":"listEnvironments","parameters":[{"$ref":"#/components/parameters/take"},{"$ref":"#/components/parameters/skip"},{"$ref":"#/components/parameters/switchableResourceSortBy"},{"$ref":"#/components/parameters/sortDirection"}],"responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EnvironmentResourceList"}},"text/yaml":{"schema":{"type":"object","properties":{"count":{"type":"integer"},"items":{"type":"array","items":{"$ref":"#/components/schemas/EnvironmentResource"}}}}}}},"400":{"description":"invalid query for environments, some data was sent in incorrect format."},"500":{"description":"problem listing environments"}}},"post":{"tags":["resource-api"],"summary":"Create an environment","description":"Create an environment that can be used by tests and transactions","operationId":"createEnvironment","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EnvironmentResource"}},"text/yaml":{"schema":{"$ref":"#/components/schemas/EnvironmentResource"}}}},"responses":{"201":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EnvironmentResource"}},"text/yaml":{"schema":{"$ref":"#/components/schemas/EnvironmentResource"}}}},"500":{"description":"problem creating an environment"}}}},"/environments/{environmentId}":{"get":{"tags":["resource-api"],"parameters":[{"$ref":"#/components/parameters/environmentId"}],"summary":"Get a specific environment","description":"Get one environment by its id","operationId":"getEnvironment","responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EnvironmentResource"}},"text/yaml":{"schema":{"$ref":"#/components/schemas/EnvironmentResource"}}}},"404":{"description":"environment not found"},"500":{"description":"problem getting an environment"}}},"put":{"tags":["resource-api"],"parameters":[{"$ref":"#/components/parameters/environmentId"}],"summary":"Update an environment","description":"Update an environment used on Tracetest","operationId":"updateEnvironment","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EnvironmentResource"}},"text/yaml":{"schema":{"$ref":"#/components/schemas/EnvironmentResource"}}}},"responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EnvironmentResource"}},"text/yaml":{"schema":{"$ref":"#/components/schemas/EnvironmentResource"}}}},"400":{"description":"invalid environment, some data was sent in incorrect format."},"404":{"description":"environment not found"},"500":{"description":"problem updating an environment"}}},"delete":{"tags":["resource-api"],"parameters":[{"$ref":"#/components/parameters/environmentId"}],"summary":"Delete an environment","description":"Delete an environment from Tracetest","operationId":"deleteEnvironment","responses":{"204":{"description":"successful operation"},"400":{"description":"invalid environment, some data was sent in incorrect format."},"404":{"description":"environment not found"},"500":{"description":"problem deleting an environment"}}}},"/version":{"get":{"tags":["api"],"summary":"Get the version of the API","description":"Get the version of the API","operationId":"getVersion","responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Version"}}}},"500":{"description":"problem getting the version of the API"}}}}},"components":{"schemas":{"EnvironmentValue":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"}}},"RunInformation":{"type":"object","properties":{"metadata":{"type":"object","nullable":true,"additionalProperties":{"type":"string"}},"environmentId":{"type":"string"},"variables":{"type":"array","items":{"$ref":"#/components/schemas/EnvironmentValue"}}}},"TextDefinition":{"type":"object","properties":{"runInformation":{"$ref":"#/components/schemas/RunInformation"},"content":{"type":"string"}}},"UpsertDefinitionResponse":{"type":"object","properties":{"id":{"type":"string","description":"resource ID"},"type":{"type":"string","description":"resource type"}}},"ExecuteDefinitionResponse":{"type":"object","properties":{"id":{"type":"string","description":"resource ID"},"runId":{"type":"string","description":"run ID"},"type":{"type":"string","description":"resource type"},"url":{"type":"string","description":"resource web UI url"}}},"HTTPHeader":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"}}},"HTTPAuth":{"type":"object","properties":{"type":{"type":"string","enum":["apiKey","basic","bearer"]},"apiKey":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"},"in":{"type":"string","enum":["query","header"]}}},"basic":{"type":"object","properties":{"username":{"type":"string"},"password":{"type":"string"}}},"bearer":{"type":"object","properties":{"token":{"type":"string"}}}}},"HTTPRequest":{"type":"object","properties":{"url":{"type":"string"},"method":{"type":"string","enum":["GET","PUT","POST","PATCH","DELETE","COPY","HEAD","OPTIONS","LINK","UNLINK","PURGE","LOCK","UNLOCK","PROPFIND","VIEW"]},"headers":{"type":"array","items":{"$ref":"#/components/schemas/HTTPHeader"}},"body":{"type":"string"},"auth":{"$ref":"#/components/schemas/HTTPAuth"}}},"GRPCHeader":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"}}},"GRPCRequest":{"type":"object","properties":{"protobufFile":{"type":"string"},"address":{"type":"string"},"service":{"type":"string"},"method":{"type":"string"},"metadata":{"type":"array","items":{"$ref":"#/components/schemas/GRPCHeader"}},"auth":{"$ref":"#/components/schemas/HTTPAuth"},"request":{"type":"string"}}},"TRACEIDRequest":{"type":"object","properties":{"id":{"type":"string"}}},"Trigger":{"type":"object","properties":{"triggerType":{"type":"string","enum":["http","grpc","traceid"]},"triggerSettings":{"type":"object","properties":{"http":{"$ref":"#/components/schemas/HTTPRequest"},"grpc":{"$ref":"#/components/schemas/GRPCRequest"},"traceid":{"$ref":"#/components/schemas/TRACEIDRequest"}}}}},"SelectorFilter":{"type":"object","required":["property","operator","value"],"properties":{"property":{"type":"string"},"operator":{"type":"string"},"value":{"type":"string"}}},"SelectorPseudoClass":{"type":"object","nullable":true,"required":["name"],"properties":{"name":{"type":"string"},"argument":{"type":"integer"}}},"SpanSelector":{"type":"object","nullable":true,"required":["filters"],"properties":{"filters":{"type":"array","items":{"$ref":"#/components/schemas/SelectorFilter"}},"pseudoClass":{"$ref":"#/components/schemas/SelectorPseudoClass"},"childSelector":{"$ref":"#/components/schemas/SpanSelector"}}},"Selector":{"type":"object","properties":{"query":{"type":"string"},"structure":{"type":"array","items":{"$ref":"#/components/schemas/SpanSelector"}}}},"TestSpecs":{"type":"object","properties":{"specs":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","nullable":true},"selector":{"$ref":"#/components/schemas/Selector"},"assertions":{"type":"array","items":{"type":"string"}}}}}},"example":{"specs":[{"selector":{"query":"span[tracetest.span.type=\\"http\\"]","structure":[{"filters":[{"property":"tracetest.span.type","operator":"=","value":"http"}]}]},"assertions":[{"attribute":"tracetest.span.duration","comparator":"<","expected":"2000"},{"attribute":"http.status_code","comparator":"=","expected":"200"}]}]}},"TestOutput":{"type":"object","properties":{"name":{"type":"string"},"selector":{"$ref":"#/components/schemas/Selector"},"value":{"type":"string"}}},"TestSummary":{"type":"object","properties":{"runs":{"type":"integer","readOnly":true},"lastRun":{"type":"object","readOnly":true,"properties":{"time":{"type":"string","format":"date-time","nullable":true},"passes":{"type":"integer","readOnly":true},"fails":{"type":"integer","readOnly":true}}}}},"Test":{"type":"object","properties":{"id":{"type":"string","readOnly":true},"name":{"type":"string"},"description":{"type":"string"},"version":{"type":"integer","description":"version number of the test"},"createdAt":{"type":"string","format":"date-time"},"serviceUnderTest":{"$ref":"#/components/schemas/Trigger"},"specs":{"$ref":"#/components/schemas/TestSpecs","description":"specification of assertions that are going to be made"},"outputs":{"description":"define test outputs, in a key/value format. The value is processed as an expression","type":"array","items":{"$ref":"#/components/schemas/TestOutput"},"example":[{"name":"USER_ID","selector":"span[name=\\"user_signup\\" result=\\"success\\"]","value":"attr:myapp.signup.user_id"},{"name":"PROFILE_URL","selector":"span[tracetest.span.type=\\"general\\" name=\\"Tracetest trigger\\"]","value":"${attr:tracetest.response.body | json_path \'.user.profileUrl\' }"}]},"summary":{"$ref":"#/components/schemas/TestSummary","description":"summary of test data","readOnly":true}}},"Transaction":{"type":"object","properties":{"id":{"type":"string","readOnly":true},"name":{"type":"string"},"description":{"type":"string"},"version":{"type":"integer","description":"version number of the test"},"steps":{"type":"array","items":{"$ref":"#/components/schemas/Test"}},"createdAt":{"type":"string","format":"date-time"},"summary":{"$ref":"#/components/schemas/TestSummary","description":"summary of transaction","readOnly":true}}},"Environment":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"description":{"type":"string"},"values":{"type":"array","items":{"$ref":"#/components/schemas/EnvironmentValue"}}}},"HTTPResponse":{"type":"object","properties":{"status":{"type":"string"},"statusCode":{"type":"integer"},"headers":{"type":"array","items":{"$ref":"#/components/schemas/HTTPHeader"}},"body":{"type":"string"}}},"GRPCResponse":{"type":"object","properties":{"statusCode":{"type":"integer"},"metadata":{"type":"array","items":{"$ref":"#/components/schemas/GRPCHeader"}},"body":{"type":"string"}}},"TRACEIDResponse":{"type":"object","properties":{"id":{"type":"string"}}},"TriggerResult":{"type":"object","properties":{"triggerType":{"type":"string","enum":["http","grpc","traceid"]},"triggerResult":{"type":"object","properties":{"http":{"$ref":"#/components/schemas/HTTPResponse"},"grpc":{"$ref":"#/components/schemas/GRPCResponse"},"traceid":{"$ref":"#/components/schemas/TRACEIDResponse"}}}}},"Span":{"type":"object","properties":{"id":{"type":"string"},"parentId":{"type":"string"},"name":{"type":"string"},"startTime":{"type":"integer","format":"int64","description":"span start time in unix milli format","example":1656701595277},"endTime":{"type":"integer","format":"int64","description":"span end time in unix milli format","example":1656701595800},"attributes":{"type":"object","description":"Key-Value of span attributes","additionalProperties":{"type":"string","description":"attribute value"},"example":{"span.name":"POST /create","tracetest.span.type":"http","tracetest.span.duration":"2000"}},"children":{"type":"array","items":{"$ref":"#/components/schemas/Span"}}}},"Trace":{"type":"object","properties":{"traceId":{"type":"string"},"tree":{"$ref":"#/components/schemas/Span"},"flat":{"description":"falttened version, mapped as spanId -> span{}","type":"object","additionalProperties":{"$ref":"#/components/schemas/Span"}}}},"AssertionSpanResult":{"type":"object","properties":{"spanId":{"type":"string"},"observedValue":{"type":"string"},"passed":{"type":"boolean"},"error":{"type":"string"}}},"AssertionResult":{"type":"object","properties":{"assertion":{"type":"string"},"allPassed":{"type":"boolean"},"spanResults":{"type":"array","items":{"$ref":"#/components/schemas/AssertionSpanResult"}}}},"AssertionResults":{"type":"object","properties":{"allPassed":{"type":"boolean"},"results":{"type":"array","items":{"type":"object","properties":{"selector":{"$ref":"#/components/schemas/Selector"},"results":{"type":"array","items":{"$ref":"#/components/schemas/AssertionResult"}}}}}},"example":{"allPassed":true,"results":[{"selector":{"query":"span[tracetest.span.type=\\"http\\"]","structure":[{"filters":[{"property":"tracetest.span.type","operator":"=","value":"http"}]}]},"results":[{"assertion":{"attribute":"http.status_code","comparator":"=","expected":"200"},"allPassed":true,"spanResults":[{"spanId":"123","observedValue":"test","passed":true}]},{"assertion":{"attribute":"http.status_code","comparator":"=","expected":"200"},"allPassed":true,"spanResults":[{"spanId":"123","observedValue":"test","passed":true}]}]}]}},"TestRun":{"type":"object","properties":{"id":{"type":"string","readOnly":true},"traceId":{"type":"string","readOnly":true},"spanId":{"type":"string","readOnly":true},"testVersion":{"type":"integer","description":"Test version used when running this test run"},"state":{"type":"string","enum":["CREATED","EXECUTING","AWAITING_TRACE","AWAITING_TEST_RESULTS","FINISHED","STOPPED","TRIGGER_FAILED","TRACE_FAILED","ASSERTION_FAILED"],"description":"Current execution state"},"lastErrorState":{"type":"string","description":"Details of the cause for the last `FAILED` state"},"executionTime":{"type":"integer","description":"time in seconds it took for the test to complete, either success or fail. If the test is still running, it will show the time up to the time of the request"},"triggerTime":{"type":"integer","description":"time in milliseconds it took for the triggering transaction to complete, either success or fail. If the test is still running, it will show the time up to the time of the request"},"createdAt":{"type":"string","format":"date-time"},"serviceTriggeredAt":{"type":"string","format":"date-time"},"serviceTriggerCompletedAt":{"type":"string","format":"date-time"},"obtainedTraceAt":{"type":"string","format":"date-time"},"completedAt":{"type":"string","format":"date-time"},"environment":{"$ref":"#/components/schemas/Environment"},"triggerResult":{"$ref":"#/components/schemas/TriggerResult"},"trace":{"$ref":"#/components/schemas/Trace"},"result":{"$ref":"#/components/schemas/AssertionResults"},"outputs":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string"},"spanId":{"type":"string"},"value":{"type":"string"},"error":{"type":"string"}}}},"metadata":{"type":"object","additionalProperties":{"type":"string"}},"transactionId":{"type":"string"},"transactionRunId":{"type":"string"}}},"TransactionRun":{"type":"object","properties":{"id":{"type":"string","readOnly":true},"version":{"type":"integer","readOnly":true},"createdAt":{"type":"string","format":"date-time"},"completedAt":{"type":"string","format":"date-time"},"state":{"type":"string","enum":["CREATED","EXECUTING","FINISHED","FAILED"]},"steps":{"type":"array","items":{"$ref":"#/components/schemas/TestRun"}},"environment":{"$ref":"#/components/schemas/Environment"},"metadata":{"type":"object","additionalProperties":{"type":"string"}},"pass":{"type":"integer"},"fail":{"type":"integer"}}},"Variable":{"type":"object","properties":{"key":{"type":"string"},"defaultValue":{"type":"string"}}},"MissingVariable":{"type":"object","properties":{"testId":{"type":"string"},"variables":{"type":"array","items":{"$ref":"#/components/schemas/Variable"}}}},"MissingVariablesError":{"type":"object","properties":{"missingVariables":{"type":"array","items":{"$ref":"#/components/schemas/MissingVariable"}}}},"SelectedSpansResult":{"type":"object","properties":{"selector":{"$ref":"#/components/schemas/Selector"},"spanIds":{"type":"array","items":{"type":"string"}}}},"ExportedTestInformation":{"type":"object","required":["test","run"],"properties":{"test":{"$ref":"#/components/schemas/Test"},"run":{"$ref":"#/components/schemas/TestRun"}}},"ConnectionTestStep":{"type":"object","properties":{"passed":{"type":"boolean"},"status":{"type":"string","enum":["passed","warning","failed"]},"message":{"type":"string"},"error":{"type":"string"}}},"ConnectionResult":{"type":"object","properties":{"portCheck":{"$ref":"#/components/schemas/ConnectionTestStep"},"connectivity":{"$ref":"#/components/schemas/ConnectionTestStep"},"authentication":{"$ref":"#/components/schemas/ConnectionTestStep"},"fetchTraces":{"$ref":"#/components/schemas/ConnectionTestStep"}}},"PollingInfo":{"type":"object","properties":{"type":{"type":"string","enum":["periodic"]},"isComplete":{"type":"boolean"},"periodic":{"type":"object","properties":{"numberSpans":{"type":"integer"},"numberIterations":{"type":"integer"}}}}},"OutputInfo":{"type":"object","properties":{"logLevel":{"type":"string","enum":["warning","error"]},"message":{"type":"string"},"outputName":{"type":"string"}}},"TestRunEvent":{"type":"object","properties":{"type":{"type":"string"},"stage":{"type":"string","enum":["trigger","trace","test"]},"title":{"type":"string"},"description":{"type":"string"},"createdAt":{"type":"string","format":"date-time"},"testId":{"type":"string"},"runId":{"type":"integer"},"dataStoreConnection":{"$ref":"#/components/schemas/ConnectionResult"},"polling":{"$ref":"#/components/schemas/PollingInfo"},"outputs":{"type":"array","items":{"$ref":"#/components/schemas/OutputInfo"}}}},"ResolveContext":{"type":"object","properties":{"testId":{"type":"string"},"runId":{"type":"string"},"spanId":{"type":"string"},"selector":{"type":"string"},"environmentId":{"type":"string"}}},"ResolveRequestInfo":{"type":"object","properties":{"expression":{"type":"string"},"context":{"$ref":"#/components/schemas/ResolveContext"}}},"ResolveResponseInfo":{"type":"object","properties":{"resolvedValues":{"type":"array","items":{"type":"string"}}}},"Resource":{"type":"object","required":["type","item"],"nullable":false,"properties":{"type":{"type":"string","readOnly":true},"item":{}}},"SupportedDataStores":{"type":"string","enum":["jaeger","opensearch","tempo","signalfx","otlp","elasticapm","newrelic","lightstep","datadog","awsxray","honeycomb"]},"TLSSetting":{"type":"object","properties":{"cAFile":{"type":"string"},"certFile":{"type":"string"},"keyFile":{"type":"string"},"minVersion":{"type":"string"},"maxVersion":{"type":"string"}}},"TLS":{"type":"object","properties":{"insecure":{"type":"boolean"},"insecureSkipVerify":{"type":"boolean"},"serverName":{"type":"string"},"settings":{"$ref":"#/components/schemas/TLSSetting"}}},"GRPCClientSettings":{"type":"object","properties":{"endpoint":{"type":"string"},"readBufferSize":{"type":"number"},"writeBufferSize":{"type":"number"},"waitForReady":{"type":"boolean"},"headers":{"type":"object","additionalProperties":{"type":"string"}},"balancerName":{"type":"string"},"compression":{"type":"string","enum":["gzip","zlib","deflate","snappy","zstd","none",""]},"tls":{"$ref":"#/components/schemas/TLS"},"auth":{"$ref":"#/components/schemas/HTTPAuth"}}},"SupportedClients":{"type":"string","enum":["http","grpc"]},"HTTPClientSettings":{"type":"object","properties":{"url":{"type":"string"},"headers":{"type":"object","additionalProperties":{"type":"string"}},"tls":{"$ref":"#/components/schemas/TLS"},"auth":{"$ref":"#/components/schemas/HTTPAuth"}}},"BaseClient":{"type":"object","properties":{"type":{"$ref":"#/components/schemas/SupportedClients"},"http":{"$ref":"#/components/schemas/HTTPClientSettings"},"grpc":{"$ref":"#/components/schemas/GRPCClientSettings"}}},"ElasticSearch":{"type":"object","properties":{"addresses":{"type":"array","items":{"type":"string"}},"username":{"type":"string"},"password":{"type":"string"},"index":{"type":"string"},"certificate":{"type":"string"},"insecureSkipVerify":{"type":"boolean"}}},"SignalFX":{"type":"object","properties":{"realm":{"type":"string"},"token":{"type":"string"}}},"AwsXRay":{"type":"object","properties":{"region":{"type":"string"},"accessKeyId":{"type":"string"},"secretAccessKey":{"type":"string"},"sessionToken":{"type":"string"},"useDefaultAuth":{"type":"boolean"}}},"DataStore":{"type":"object","required":["name","type"],"properties":{"id":{"type":"string","readOnly":true},"name":{"type":"string"},"type":{"$ref":"#/components/schemas/SupportedDataStores"},"default":{"type":"boolean"},"jaeger":{"$ref":"#/components/schemas/GRPCClientSettings"},"tempo":{"$ref":"#/components/schemas/BaseClient"},"opensearch":{"$ref":"#/components/schemas/ElasticSearch"},"elasticapm":{"$ref":"#/components/schemas/ElasticSearch"},"signalfx":{"$ref":"#/components/schemas/SignalFX"},"awsxray":{"$ref":"#/components/schemas/AwsXRay"},"createdAt":{"type":"string","format":"date-time"}}},"TestConnectionResponse":{"type":"object","properties":{"successful":{"type":"boolean"},"steps":{"type":"array","items":{"$ref":"#/components/schemas/ConnectionResult"}}}},"ConfigurationResource":{"type":"object","description":"Represents a configuration structured into the Resources format.","properties":{"type":{"type":"string","description":"Represents the type of this resource. It should always be set as \'Config\'.","enum":["Config"]},"spec":{"type":"object","description":"Represents the set of configuration common options for Tracetest.","properties":{"id":{"type":"string","description":"ID of the configuration resource. It should always be set as \'current\'.","enum":["current"]},"name":{"type":"string","description":"Name given for this configuration set. It should always be set as \'Config\'.","enum":["Config"]},"analyticsEnabled":{"type":"boolean","description":"Flag telling if a user allow Tracetest to send analytics about its usage."}},"required":["analyticsEnabled"]}}},"ConfigurationResourceList":{"type":"object","properties":{"count":{"type":"integer"},"items":{"type":"array","items":{"$ref":"#/components/schemas/ConfigurationResource"}}}},"PollingProfile":{"type":"object","description":"Represents a polling profile structured into the Resources format.","properties":{"type":{"type":"string","description":"Represents the type of this resource. It should always be set as \'PollingProfile\'.","enum":["PollingProfile"]},"spec":{"type":"object","description":"Represents the attributes of a Polling Profile.","properties":{"id":{"type":"string","description":"ID of this Polling Profile."},"name":{"type":"string","description":"Name given for this profile."},"default":{"type":"boolean","description":"Is default polling profile"},"strategy":{"type":"string","description":"Name of the strategy that will be used on this profile.","enum":["periodic"]},"periodic":{"type":"object","description":"Configuration for the strategy \'periodic\'. It only should be filled if the field strategy is equals to \'periodic\'.","properties":{"retryDelay":{"description":"Time that the poller should wait until try to fetch more traces. It should be written in duration format (example: 1s, 30s, 1m).","type":"string"},"timeout":{"description":"Total time that the poller should try to continue to fetch traces. It should be written in duration format (example: 1s, 30s, 1m).","type":"string"}}}},"required":["id","name","strategy"]}}},"PollingProfileList":{"type":"object","properties":{"count":{"type":"integer"},"items":{"type":"array","items":{"$ref":"#/components/schemas/PollingProfile"}}}},"DemoPokeshop":{"type":"object","description":"Represents the settings of the Pokeshop API demonstration.","properties":{"httpEndpoint":{"type":"string","description":"HTTP endpoint for Pokeshop API"},"grpcEndpoint":{"type":"string","description":"gRPC endpoint for Pokeshop API"}}},"DemoOpenTelemetryStore":{"type":"object","description":"Represents the settings of the Open Telemetry Store demonstration.","properties":{"frontendEndpoint":{"type":"string","description":"Address of the root URL for the Frontend microservice on Open Telemetry Store."},"productCatalogEndpoint":{"type":"string","description":"Address of the root URL for the Product Catalog microservice on Open Telemetry Store."},"cartEndpoint":{"type":"string","description":"Address of the root URL for the Cart microservice on Open Telemetry Store."},"checkoutEndpoint":{"type":"string","description":"Address of the root URL for the Checkout microservice on Open Telemetry Store."}}},"Demo":{"type":"object","description":"Represents a demonstration API structured into the Resources format.","properties":{"type":{"type":"string","description":"Represents the type of this resource. It should always be set as \'Demo\'.","enum":["Demo"]},"spec":{"description":"Represents the attributes of a Demonstration API.","type":"object","properties":{"id":{"type":"string"},"type":{"type":"string","description":"String defining that this demo is a Open Telemetry Store demo.","enum":["otelstore","pokeshop"]},"name":{"type":"string","description":"Name of the demo"},"enabled":{"type":"boolean","description":"Flag telling if this API is enabled on Tracetest."},"pokeshop":{"$ref":"#/components/schemas/DemoPokeshop"},"opentelemetryStore":{"$ref":"#/components/schemas/DemoOpenTelemetryStore"}},"required":["enabled"]}}},"DemoList":{"type":"object","properties":{"count":{"type":"integer"},"items":{"type":"array","items":{"$ref":"#/components/schemas/Demo"}}}},"DataStoreResource":{"type":"object","description":"Represents a data store structured into the Resources format.","properties":{"type":{"type":"string","description":"Represents the type of this resource. It should always be set as \'DataStore\'.","enum":["DataStore"]},"spec":{"$ref":"#/components/schemas/DataStore"}}},"DataStoreList":{"type":"object","properties":{"count":{"type":"integer"},"items":{"type":"array","items":{"$ref":"#/components/schemas/DataStoreResource"}}}},"EnvironmentResource":{"type":"object","description":"Represents an environment structured into the Resources format.","properties":{"type":{"type":"string","description":"Represents the type of this resource. It should always be set as \'Environment\'.","enum":["Environment"]},"spec":{"$ref":"#/components/schemas/Environment"}}},"EnvironmentResourceList":{"type":"object","properties":{"count":{"type":"integer"},"items":{"type":"array","items":{"$ref":"#/components/schemas/EnvironmentResource"}}}},"Version":{"type":"object","properties":{"version":{"type":"string","example":"1.0.0"}}}},"parameters":{"take":{"in":"query","name":"take","description":"indicates how many resources can be returned by each page","schema":{"type":"integer","default":20}},"skip":{"in":"query","name":"skip","description":"indicates how many resources will be skipped when paginating","schema":{"type":"integer","default":0}},"query":{"in":"query","name":"query","description":"query to search resources","schema":{"type":"string"}},"runnableResourceSortBy":{"in":"query","name":"sortBy","description":"indicates the sort field for the resources","schema":{"type":"string","enum":["created","name","last_run"]}},"sortDirection":{"in":"query","name":"sortDirection","description":"indicates the sort direction for the resources","schema":{"type":"string","enum":["asc","desc"]}},"transactionId":{"in":"path","name":"transactionId","required":true,"description":"id of the transaction","schema":{"type":"string"}},"version":{"in":"path","name":"version","required":true,"description":"version of the test","schema":{"type":"integer"}},"runId":{"in":"path","name":"runId","required":true,"description":"id of the run","schema":{"type":"integer"}},"testId":{"in":"path","name":"testId","required":true,"description":"id of the test","schema":{"type":"string"}},"switchableResourceSortBy":{"in":"query","name":"sortBy","description":"indicates the sort field for the resources","schema":{"type":"string","enum":["type","enabled"]}},"configId":{"in":"path","name":"configId","schema":{"type":"string"},"required":true,"description":"ID of the configuration resource used on Tracetest. It should be set as \'current\'"},"pollingProfileId":{"in":"path","name":"pollingProfileId","required":true,"description":"ID of a polling profile used on Tracetest to configure how to fetch traces in a test. It should be set as \'current\'","schema":{"type":"string"}},"demoId":{"in":"path","name":"demoId","required":true,"description":"ID of a demonstration used on Tracetest as quick start examples","schema":{"type":"string"}},"dataStoreId":{"in":"path","name":"dataStoreId","required":true,"description":"ID of a datastore used on Tracetest to configure how to fetch traces in a test","schema":{"type":"string"}},"environmentId":{"in":"path","name":"environmentId","required":true,"description":"ID of an environment used on Tracetest to inject values into tests and transactions","schema":{"type":"string"}}}}}}')}}]);